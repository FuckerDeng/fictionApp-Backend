<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="df.bangwu.db.mappers.FictionMapper">
  <resultMap id="BaseResultMap" type="df.bangwu.bean.Fiction">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="fiction_name" jdbcType="VARCHAR" property="fictionName" />
    <result column="fiction_desc" jdbcType="VARCHAR" property="fictionDesc" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="fictiontype" jdbcType="VARCHAR" property="fictiontype" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="imgUrl" jdbcType="VARCHAR" property="imgurl" />
    <result column="localUrl" jdbcType="VARCHAR" property="localurl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fiction_name, fiction_desc, author, fictiontype, tags, imgUrl, localUrl
  </sql>
  <select id="selectByExample" parameterType="df.bangwu.bean.FictionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="df.bangwu.bean.FictionExample">
    delete from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="df.bangwu.bean.Fiction">
    insert into fiction (id, fiction_name, fiction_desc, 
      author, fictiontype, tags, 
      imgUrl, localUrl)
    values (#{id,jdbcType=INTEGER}, #{fictionName,jdbcType=VARCHAR}, #{fictionDesc,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{fictiontype,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{imgurl,jdbcType=VARCHAR}, #{localurl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="df.bangwu.bean.Fiction">
    insert into fiction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fictionName != null">
        fiction_name,
      </if>
      <if test="fictionDesc != null">
        fiction_desc,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="fictiontype != null">
        fictiontype,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="imgurl != null">
        imgUrl,
      </if>
      <if test="localurl != null">
        localUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fictionName != null">
        #{fictionName,jdbcType=VARCHAR},
      </if>
      <if test="fictionDesc != null">
        #{fictionDesc,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="fictiontype != null">
        #{fictiontype,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="localurl != null">
        #{localurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="df.bangwu.bean.FictionExample" resultType="java.lang.Long">
    select count(*) from fiction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fiction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fictionName != null">
        fiction_name = #{record.fictionName,jdbcType=VARCHAR},
      </if>
      <if test="record.fictionDesc != null">
        fiction_desc = #{record.fictionDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.fictiontype != null">
        fictiontype = #{record.fictiontype,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.imgurl != null">
        imgUrl = #{record.imgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.localurl != null">
        localUrl = #{record.localurl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fiction
    set id = #{record.id,jdbcType=INTEGER},
      fiction_name = #{record.fictionName,jdbcType=VARCHAR},
      fiction_desc = #{record.fictionDesc,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      fictiontype = #{record.fictiontype,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      imgUrl = #{record.imgurl,jdbcType=VARCHAR},
      localUrl = #{record.localurl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="getTop20" resultMap="BaseResultMap">
    select * from fiction limit 20
  </select>
</mapper>